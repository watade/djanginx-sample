upstream app_server {
# fail_timeout=0 means we always retry an upstream even if it failed
# to return a good HTTP response

# for UNIX domain socket setups
server unix:/var/run/gunicorn/gunicorn.sock fail_timeout=0;
}

server {
# 一致するホスト名がない場合, コネクションを閉じる
listen 80 default_server;
return 444;
}

server {
# listen 80 deferred; # TCP_DEFER_ACCEPTオプションを使い, TCP接続が確立されるまでの待ち時間を短くする
listen 8000;
client_max_body_size 4G; # サーバーが受け取るクライアントからのデータの最大サイズを4GBに設定

server_name localhost;

# root /path/to/app/current/public; ドキュメントルートのディレクトリ

location / {
    try_files $uri @proxy_to_app; # uriのパスに対する静的コンテンツが存在しない場合, @proxy_to_appに内部リダイレクト
}

# 名前付きロケーション
location @proxy_to_app {
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # X-Forwarded-Forヘッダに直前のIPアドレスを追加
    proxy_set_header X-Forwarded-For $remote_addr; # X-Forwarded-Forヘッダに直前のIPアドレスを渡す
    proxy_set_header X-Forwarded-Proto $scheme; # X-Forwarded-Protoヘッダにリクエストのプロトコルを渡す
    proxy_set_header Host $http_host; # X-Forwarded-Hostヘッダにリクエストのホスト名を渡す
    proxy_redirect off; # Location, Refreshヘッダを書き換えてレスポンスを返さない
    proxy_pass http://app_server; # リクエストをapp_serverに転送

    # # Client -> LB -> nginx -> app server という構成なら
    # # real_ip_header X-Forwarded-For; # remote_addrとしてX-Forwarded-Forヘッダの最後のIPを設定する
    # # real_ip_recursive on; # X-Forwarded-Forヘッダに複数のIPアドレスが存在する場合, set_real_ip_fromに載っていないアドレスをremote_addrとして扱う
    # # set_real_ip_from 10.10.0.0/16; # ローカルIP10.10.0.0/1以外のIPからremote_addrを選ぶ
    # # proxy_set_header Host $http_host;
    # # proxy_set_header X-Real-IP $remote_addr; # x-real-ipにクライアントIPを設定
    # # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # X-Forwarded-Forヘッダに直前のIPアドレスを追加
}

error_page 500 502 503 504 /500.html; # 500系のエラーが発生したときに表示するエラーページのパス
location = /500.html {
    root /path/to/app/current/public;
}
}